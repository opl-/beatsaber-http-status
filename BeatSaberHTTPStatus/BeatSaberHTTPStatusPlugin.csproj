<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{1C0571AC-F8D6-4F9E-93B2-2F23892AE61E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>BeatSaberHTTPStatus</RootNamespace>
    <AssemblyName>BeatSaberHTTPStatus</AssemblyName>
    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
    <Version>1.9.1</Version>
    <BeatSaberVersion>1.6.0</BeatSaberVersion>
    <GameDirPath>..\libs\beatsaber\</GameDirPath>
    <SemVerVersion>$(Version)</SemVerVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
    <SemVerVersion>$(Version)-dev</SemVerVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="HMLib">
      <HintPath>$(GameDirPath)\Beat Saber_Data\Managed\HMLib.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="IPA.Loader">
      <HintPath>$(GameDirPath)\Beat Saber_Data\Managed\IPA.Loader.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="MainAssembly">
      <HintPath>$(GameDirPath)\Beat Saber_Data\Managed\MainAssembly.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="UnityEngine, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
      <HintPath>$(GameDirPath)Beat Saber_Data\Managed\UnityEngine.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
      <HintPath>$(GameDirPath)Beat Saber_Data\Managed\UnityEngine.CoreModule.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.AudioModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
      <HintPath>$(GameDirPath)Beat Saber_Data\Managed\UnityEngine.AudioModule.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="UnityEngine.ImageConversionModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
      <HintPath>$(GameDirPath)Beat Saber_Data\Managed\UnityEngine.ImageConversionModule.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <Reference Include="BS_Utils, Culture=neutral">
      <HintPath>$(GameDirPath)Plugins\BS_Utils.dll</HintPath>
      <Private>False</Private>
    </Reference>
    <ProjectReference Include="..\libs\websocket-sharp\websocket-sharp\websocket-sharp.csproj">
      <Project>{B357BAC7-529E-4D81-A0D2-71041B19C8DE}</Project>
      <Name>websocket-sharp</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <ToCompile Include="**\*.cs" Exclude="bin\**\*;obj\**\*" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="$(IntermediateOutputPath)src/manifest.json">
      <LogicalName>$(RootNamespace).manifest.json</LogicalName>
    </EmbeddedResource>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- Clean output directories before build -->
  <Target Name="CleanOutputDirs" BeforeTargets="BeforeBuild">
    <RemoveDir Directories="$(OutDir)" />
    <RemoveDir Directories="$(IntermediateOutputPath)" />
  </Target>
  <!-- Replace strings in source files -->
  <Target Name="BeforeBuild">
    <PropertyGroup>
      <IntermediateSourcePath>$(IntermediateOutputPath)src\</IntermediateSourcePath>
    </PropertyGroup>
    <Copy SourceFiles="@(ToCompile)" DestinationFiles="@(ToCompile->'$(IntermediateSourcePath)%(RecursiveDir)%(Filename)%(Extension)')" SkipUnchangedFiles="true">
      <Output TaskParameter="CopiedFiles" ItemName="Compile" />
    </Copy>
    <ReplaceFileText InputFilename="$(IntermediateSourcePath)Plugin.cs" OutputFilename="$(IntermediateSourcePath)Plugin.cs" MatchExpression="$SEMVER_VERSION$" ReplacementText="$(SemVerVersion)" />
    <ReplaceFileText InputFilename="$(IntermediateSourcePath)Plugin.cs" OutputFilename="$(IntermediateSourcePath)Plugin.cs" MatchExpression="$BS_VERSION$" ReplacementText="$(BeatSaberVersion)" />
    <ReplaceFileText InputFilename="$(IntermediateSourcePath)Properties\AssemblyInfo.cs" OutputFilename="$(IntermediateSourcePath)Properties\AssemblyInfo.cs" MatchExpression="$VERSION$" ReplacementText="$(Version)" />
    <Copy SourceFiles="manifest.json" DestinationFiles="$(IntermediateSourcePath)manifest.json" SkipUnchangedFiles="true"></Copy>
    <ReplaceFileText InputFilename="$(IntermediateSourcePath)manifest.json" OutputFilename="$(IntermediateSourcePath)manifest.json" MatchExpression="$SEMVER_VERSION$" ReplacementText="$(SemVerVersion)" />
    <ReplaceFileText InputFilename="$(IntermediateSourcePath)manifest.json" OutputFilename="$(IntermediateSourcePath)manifest.json" MatchExpression="$BS_VERSION$" ReplacementText="$(BeatSaberVersion)" />
  </Target>
  <!-- Package built DLLs into a zip -->
  <Target Name="CreateZip" AfterTargets="AfterBuild" Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <ItemGroup>
      <ZipFilesPlugins Include="$(OutDir)\BeatSaberHTTPStatus.dll" />
    </ItemGroup>
    <ItemGroup>
      <ZipFilesLibs Include="$(OutDir)\websocket-sharp.dll" />
    </ItemGroup>
    <Exec Command="git rev-parse HEAD &gt; $(IntermediateOutputPath)head" />
    <ReadLinesFromFile File="$(IntermediateOutputPath)head">
      <Output TaskParameter="Lines" PropertyName="FullCommitHash" />
    </ReadLinesFromFile>
    <Delete Files="$(IntermediateOutputPath)head" />
    <PropertyGroup>
      <CommitHash>$(FullCommitHash.Substring(0, 8))</CommitHash>
    </PropertyGroup>
    <Copy SourceFiles="@(ZipFilesPlugins)" DestinationFolder="$(IntermediateOutputPath)\zip\Plugins" />
    <Copy SourceFiles="@(ZipFilesLibs)" DestinationFolder="$(IntermediateOutputPath)\zip\Beat Saber_Data\Managed" />
    <ZipDir ZipFileName="$(OutDir)\BeatSaberHTTPStatus-$(SemVerVersion)-bs$(BeatSaberVersion)-$(CommitHash).zip" DirectoryName="$(IntermediateOutputPath)\zip" />
  </Target>
  <!-- Source: https://stackoverflow.com/a/38127938 -->
  <UsingTask TaskName="ZipDir" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll">
    <ParameterGroup>
      <ZipFileName ParameterType="System.String" Required="true" />
      <DirectoryName ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.IO.Compression.FileSystem" />
      <Using Namespace="System.IO.Compression" />
      <Code Type="Fragment" Language="cs"><![CDATA[
        try
        {
          Log.LogMessage(string.Format("Zipping Directory {0} to {1}", DirectoryName, ZipFileName));
          ZipFile.CreateFromDirectory( DirectoryName, ZipFileName );
          return true;
        }
        catch(Exception ex)
        {
          Log.LogErrorFromException(ex);
          return false;
        }
      ]]></Code>
    </Task>
  </UsingTask>
  <!-- Source: https://stackoverflow.com/a/22571621 -->
  <UsingTask TaskName="ReplaceFileText" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <InputFilename ParameterType="System.String" Required="true" />
      <OutputFilename ParameterType="System.String" Required="true" />
      <MatchExpression ParameterType="System.String" Required="true" />
      <ReplacementText ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.Core" />
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Text.RegularExpressions" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
          Log.LogMessage(string.Format("Replacing {0} in {1} to {2}", MatchExpression, InputFilename, ReplacementText));
          File.WriteAllText(
            OutputFilename,
            File.ReadAllText(InputFilename).Replace(MatchExpression, ReplacementText)
          );
        ]]>
      </Code>
    </Task>
  </UsingTask>
</Project>
